<Application x:Class="Shop_3.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Shop_3"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="\Resources\Rus.xaml"/>
                <ResourceDictionary Source="Resources/DarkTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--MultiTrigger следит одновременно и за нажатием и наведением на кнопку-->
            <Style x:Key="TopIcon" TargetType="Button">
                <Style.Setters>
                    <Setter Property="Button.Background" Value="Black" />
                    <Setter Property="Button.Foreground" Value="White" />
                    <Setter Property="Button.FontFamily" Value="Verdana" />
                    <Setter Property="Button.Margin" Value="10" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="IsPressed" Value="True" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Foreground" Value="Red" />
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <!--DataTrigger следит за длинной TextBox-->
            <Style x:Key="CustomTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="White"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=myTextBox, Path=Text}" Value="">
                        <Setter Property="Background" Value="red"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--EventTrigger изменяет масштаб кнопки "Добавить фото"-->
            <Style x:Key="CustomButton" TargetType="{x:Type Button}">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="0.8" Duration="0:0:0.2" Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)" />
                                <DoubleAnimation To="0.8" Duration="0:0:0.2" Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)" />
                                <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="CircularButtonTemplate" TargetType="{x:Type Button}">
                <Grid>
                    <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>

        

    </Application.Resources>
</Application>
